/*///tells the browser to read the css file as UTF-8. 
This is handy if you CSS contains unicode characters and not only ASCII.*/
/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-spongebob, .img1 {
  background-image: url(../images/spriteSheet.png);
  background-position: 0px 0px;
  width: 642px;
  height: 612px; }

.icon-sprite-one {
  background-image: url(../images/spriteSheet.png);
  background-position: -642px 0px;
  width: 309px;
  height: 416px; }

.icon-sprite-two {
  background-image: url(../images/spriteSheet.png);
  background-position: 0px -612px;
  width: 256px;
  height: 256px; }

/*//// method for importing .css file into .scss files  ////*/
/*VARS*/
body {
  font-family: Tahoma, Geneva, sans-serif;
  height: 100%;
  width: 100%; }

body, html {
  box-sizing: border-box;
  padding: 0;
  margin: 0; }

.size-300x250 {
  height: 250px;
  width: 300px; }

.size-160x600 {
  height: 600px;
  width: 160px; }

.size-728x90 {
  height: 90px;
  width: 728px; }

.size-300x600 {
  height: 600px;
  width: 300px; }

.container {
  background-color: #fff;
  background-image: url("../images/panther.jpg");
  border: 1px solid #000;
  cursor: pointer;
  margin: 0 auto;
  overflow: hidden;
  position: absolute;
  /*relative*/
  top: 0;
  /*50%*/ }

.img1 {
  height: 200px;
  left: 50px;
  outline: 1px solid #f00;
  position: absolute;
  top: 80px;
  width: 200px;
  z-index: 1; }
